<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="vip.housir.support.mapper.TicketMapper">
    <resultMap id="BaseResultMap" type="vip.housir.support.entity.Ticket">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="uid" jdbcType="INTEGER" property="uid"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <result column="rate" jdbcType="INTEGER" property="rate"/>
        <result column="module" jdbcType="VARCHAR" property="module"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        id,
        uid,
        status,
        rate,
        module,
        title,
        create_time,
        update_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from ticket
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="listByParam" parameterType="map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from ticket
        <where>
            <include refid="filter"/>
            <include refid="search"/>
        </where>
        <include refid="order"/>
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from ticket
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="vip.housir.support.entity.Ticket">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into ticket (uid, status, rate,
        module, title, create_time,
        update_time)
        values (#{uid,jdbcType=INTEGER}, #{status,jdbcType=VARCHAR}, #{rate,jdbcType=INTEGER},
        #{module,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
        #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="vip.housir.support.entity.Ticket">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into ticket
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="uid != null">
                uid,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="rate != null">
                rate,
            </if>
            <if test="module != null">
                module,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="uid != null">
                #{uid,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="rate != null">
                #{rate,jdbcType=INTEGER},
            </if>
            <if test="module != null">
                #{module,jdbcType=VARCHAR},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="vip.housir.support.entity.Ticket">
        update ticket
        <set>
            <if test="uid != null">
                uid = #{uid,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
            <if test="rate != null">
                rate = #{rate,jdbcType=INTEGER},
            </if>
            <if test="module != null">
                module = #{module,jdbcType=VARCHAR},
            </if>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="vip.housir.support.entity.Ticket">
        update ticket
        set uid         = #{uid,jdbcType=INTEGER},
            status      = #{status,jdbcType=VARCHAR},
            rate        = #{rate,jdbcType=INTEGER},
            module      = #{module,jdbcType=VARCHAR},
            title       = #{title,jdbcType=VARCHAR},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <sql id="filter">
        <if test="uid != null">
            and uid = #{uid,jdbcType=INTEGER}
        </if>
        <if test="status != null and status!=''">
            and status = #{status,jdbcType=VARCHAR}
        </if>
        <if test="module != null and module!=''">
            and module = #{module,jdbcType=VARCHAR}
        </if>
    </sql>
    <sql id="search">
        <if test="title != null and title!=''">
            and title like CONCAT('%',#{title,jdbcType=VARCHAR},'%')
        </if>
    </sql>
    <sql id="order">
        <if test="orderBy != null and orderBy!=''">
            order by
            <if test="orderBy == 'createTime'">
                create_time
            </if>
            <if test="orderBy == 'uid'">
                uid
            </if>
            <if test="orderBy == 'rate'">
                rate
            </if>
            <if test="orderBy == 'module'">
                module
            </if>
            <if test="orderBy == 'status'">
                status
            </if>
            <!-- order type -->
            <if test="orderType == 'desc'">
                desc
            </if>
            <if test="orderType == 'asc'">
                asc
            </if>
        </if>
    </sql>
</mapper>