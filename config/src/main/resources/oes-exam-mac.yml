server:
  port: 8520
  address:

spring:
  application:
    name: oes-exam
  rabbitmq:
    host: localhost
    username: guest
    password: guest
    virtual-host: oes
  redis:
    #Redis数据库索引（缓存将使用此索引编号的数据库）
    database: 10
    #Redis服务器地址
    host: localhost
    #Redis服务器连接端口
    port: 6379
    #Redis服务器连接密码（默认为空）
#    password:
    #连接超时时间 毫秒（默认2000）
    #请求redis服务的超时时间,这里注意设置成0时取默认时间2000
    timeout: 2000
    #连接池最大连接数（使用负值表示没有限制）
    #建议为业务期望QPS/一个连接的QPS,例如50000/1000=50
    #一次命令时间(borrow|return resource+Jedis执行命令+网络延迟)的平均耗时约为1ms,一个连接的QPS大约是1000
    pool:
      max-active: 50
    #连接池中的最大空闲连接
    #建议和最大连接数一致,这样做的好处是连接数从不减少,从而避免了连接池伸缩产生的性能开销。
      max-idle: 50
    #连接池中的最小空闲连接
    #建议为0，在无请求的状况下从不创建链接
      min-idle: 0
    #连接池最大阻塞等待时间 毫秒（-1表示没有限制）
    #建议不要为-1，连接池占满后无法获取连接时将在该时间内阻塞等待，超时后将抛出异常。
      max-wait: 2000
  cloud:
    consul:
      host: localhost
      port: 8500
      discovery:
        service-name: ${spring.application.name}
        instance-id: ${spring.application.name}:${random.value}
        hostname: housirvipdeimac.lan
    #        health-check-interval: 5s
    stream:
      bindings:
        score-input:
          destination: exam-score
          group: average
        score-output:
          destination: exam-score
      binders:
        defaultRabbit:
          type: rabbit
          environment:
            spring:
              rabbitmq:
                host: ${spring.rabbitmq.host}
                username: ${spring.rabbitmq.username}
                password: ${spring.rabbitmq.password}
                virtual-host: ${spring.rabbitmq.virtual-host}
  datasource:
    url: jdbc:mysql://localhost:3306/oes?characterEncoding=utf8&autoReconnect=true&useSSL=false
    druid:
      driver-class-name: com.mysql.cj.jdbc.Driver
      url: ${spring.datasource.url}
      username: root
      password: housirvip
      max-active: 30
      min-idle: 5
      initial-size: 5
      max-wait: 20000
      # 配置间隔多久才进行一次检测，检测需要关闭空闲的连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      # 连接保持空闲而不被驱逐的最小时间
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 1
      # 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      test-while-idle: true
      # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-on-borrow: false
      # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-on-return: false
      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
      pool-prepared-statements: true
      # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。
      max-pool-prepared-statement-per-connection-size: 50
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计
      filters: stat,wall
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
      # 合并多个DruidDataSource的监控数据
      use-global-data-source-stat: true
  jackson:
    default-property-inclusion: NON_NULL
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8

mybatis:
  mapper-locations: classpath:mapper/*.xml

pagehelper:
  helperDialect: mysql
  offsetAsPageNum: true
  pageSizeZero: true
  #    reasonable: true
  #    supportMethodsArguments: true
  rowBoundsWithCount: true

feign:
  httpclient:
    enabled: false
  okhttp:
    enabled: true

ribbon:
  # 设置连接超时时间
  connect-timeout: 600
  # 设置读取超时时间
  read-timeout: 6000
  # 对所有操作请求都进行重试
  ok-to-retry-on-all-operations: true
  # 切换实例的重试次数
  max-auto-retries-next-server: 2
  # 对当前实例的重试次数
  max-auto-retries: 1

jwt:
  secret: changeIt
  expire: 21600
  delay: 60

exam:
  score-async: true
  time-limit: 2