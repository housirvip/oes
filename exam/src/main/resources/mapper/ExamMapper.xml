<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="vip.housir.exam.mapper.ExamMapper">
    <resultMap id="BaseResultMap" type="vip.housir.exam.entity.Exam">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="uid" jdbcType="INTEGER" property="uid"/>
        <result column="pid" jdbcType="INTEGER" property="pid"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="score" jdbcType="REAL" property="score"/>
        <result column="duration" jdbcType="INTEGER" property="duration"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="vip.housir.exam.entity.Exam">
        <result column="user_answer" jdbcType="LONGVARCHAR" property="userAnswer"
                typeHandler="vip.housir.base.typehandler.MapTypeHandler"/>
        <result column="section_score" jdbcType="LONGVARCHAR" property="sectionScore"
                typeHandler="vip.housir.base.typehandler.MapTypeHandler"/>
    </resultMap>
    <sql id="Base_Column_List">
        id,
        uid,
        pid,
        name,
        score,
        duration,
        create_time
    </sql>
    <sql id="Blob_Column_List">
        user_answer,
        section_score
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from exam
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="listByParam" parameterType="map" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from exam
        <where>
            <include refid="filter"/>
            <include refid="search"/>
        </where>
        <include refid="order"/>
    </select>
    <select id="countTimesByPids" parameterType="map" resultType="java.util.Map">
        select pid, count(0) as times
        from exam
        where pid in
        <foreach item="item" index="index" collection="pids" open="(" separator="," close=")">
            #{item}
        </foreach>
        <include refid="filter"/>
        group by pid
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from exam
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="vip.housir.exam.entity.Exam">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into exam (uid, pid, name,
        score, duration, create_time,
        user_answer,
        section_score
        )
        values (#{uid,jdbcType=INTEGER}, #{pid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},
        #{score,jdbcType=REAL}, #{duration,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
        #{userAnswer,jdbcType=LONGVARCHAR,typeHandler=vip.housir.base.typehandler.MapTypeHandler},
        #{sectionScore,jdbcType=LONGVARCHAR,typeHandler=vip.housir.base.typehandler.MapTypeHandler}
        )
    </insert>
    <insert id="insertSelective" parameterType="vip.housir.exam.entity.Exam">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into exam
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="uid != null">
                uid,
            </if>
            <if test="pid != null">
                pid,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="score != null">
                score,
            </if>
            <if test="duration != null">
                duration,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="userAnswer != null">
                user_answer,
            </if>
            <if test="sectionScore != null">
                section_score,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="uid != null">
                #{uid,jdbcType=INTEGER},
            </if>
            <if test="pid != null">
                #{pid,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="score != null">
                #{score,jdbcType=REAL},
            </if>
            <if test="duration != null">
                #{duration,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="userAnswer != null">
                #{userAnswer,jdbcType=LONGVARCHAR,typeHandler=vip.housir.base.typehandler.MapTypeHandler},
            </if>
            <if test="sectionScore != null">
                #{sectionScore,jdbcType=LONGVARCHAR,typeHandler=vip.housir.base.typehandler.MapTypeHandler},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="vip.housir.exam.entity.Exam">
        update exam
        <set>
            <if test="uid != null">
                uid = #{uid,jdbcType=INTEGER},
            </if>
            <if test="pid != null">
                pid = #{pid,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="score != null">
                score = #{score,jdbcType=REAL},
            </if>
            <if test="duration != null">
                duration = #{duration,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="userAnswer != null">
                user_answer = #{userAnswer,jdbcType=LONGVARCHAR,typeHandler=vip.housir.base.typehandler.MapTypeHandler},
            </if>
            <if test="sectionScore != null">
                section_score =
                #{sectionScore,jdbcType=LONGVARCHAR,typeHandler=vip.housir.base.typehandler.MapTypeHandler},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="vip.housir.exam.entity.Exam">
        update exam
        set uid = #{uid,jdbcType=INTEGER},
        pid = #{pid,jdbcType=INTEGER},
        name = #{name,jdbcType=VARCHAR},
        score = #{score,jdbcType=REAL},
        duration = #{duration,jdbcType=INTEGER},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        user_answer = #{userAnswer,jdbcType=LONGVARCHAR,typeHandler=vip.housir.base.typehandler.MapTypeHandler},
        section_score = #{sectionScore,jdbcType=LONGVARCHAR,typeHandler=vip.housir.base.typehandler.MapTypeHandler}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="vip.housir.exam.entity.Exam">
        update exam
        set uid = #{uid,jdbcType=INTEGER},
        pid = #{pid,jdbcType=INTEGER},
        name = #{name,jdbcType=VARCHAR},
        score = #{score,jdbcType=REAL},
        duration = #{duration,jdbcType=INTEGER},
        create_time = #{createTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <sql id="filter">
        <if test="uid != null">
            and uid = #{uid,jdbcType=VARCHAR}
        </if>
        <if test="pid != null">
            and pid = #{pid,jdbcType=VARCHAR}
        </if>
    </sql>
    <sql id="search">
        <if test="name != null and name!=''">
            and name like CONCAT('%',#{name,jdbcType=VARCHAR},'%')
        </if>
    </sql>
    <sql id="order">
        <if test="orderBy != null">
            order by
            <if test="orderBy == 'createTime'">
                create_time
            </if>
            <if test="orderBy == 'score'">
                score
            </if>
            <if test="orderBy == 'duration'">
                duration
            </if>
            <!-- order type -->
            <if test="orderType == 'desc'">
                desc
            </if>
            <if test="orderType == 'asc'">
                asc
            </if>
        </if>
    </sql>
</mapper>