<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="vip.housir.exam.mapper.SectionMapper">
    <resultMap id="BaseResultMap" type="vip.housir.exam.entity.Section">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="pid" jdbcType="INTEGER" property="pid" />
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="duration" jdbcType="INTEGER" property="duration"/>
        <result column="total_score" jdbcType="REAL" property="totalScore"/>
        <result column="every_score" jdbcType="REAL" property="everyScore"/>
        <result column="deduct" jdbcType="BIT" property="deduct"/>
        <result column="type" jdbcType="VARCHAR" property="type"/>
        <result column="group" jdbcType="INTEGER" property="group"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, pid, name, duration, total_score, every_score, deduct, type, `group`, create_time, update_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from section
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="listByPid" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from section
        where pid = #{pid,jdbcType=INTEGER}
    </select>
    <select id="listByParam" parameterType="map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from section
        <where>
            <include refid="filter"/>
            <include refid="search"/>
        </where>
        <include refid="order"/>
    </select>
    <select id="listInIds" parameterType="list" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from section
        where id in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from section
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="vip.housir.exam.entity.Section">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into section (pid, name, duration, total_score,
        every_score, deduct, type,
        `group`, create_time, update_time
        )
        values (#{pid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{duration,jdbcType=INTEGER}, #{totalScore,jdbcType=REAL},
        #{everyScore,jdbcType=REAL}, #{deduct,jdbcType=BIT}, #{type,jdbcType=VARCHAR},
        #{group,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
        )
    </insert>
    <insert id="insertSelective" parameterType="vip.housir.exam.entity.Section">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into section
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="pid != null">
                pid,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="duration != null">
                duration,
            </if>
            <if test="totalScore != null">
                total_score,
            </if>
            <if test="everyScore != null">
                every_score,
            </if>
            <if test="deduct != null">
                deduct,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="group != null">
                `group`,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="pid != null">
                #{pid,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="duration != null">
                #{duration,jdbcType=INTEGER},
            </if>
            <if test="totalScore != null">
                #{totalScore,jdbcType=REAL},
            </if>
            <if test="everyScore != null">
                #{everyScore,jdbcType=REAL},
            </if>
            <if test="deduct != null">
                #{deduct,jdbcType=BIT},
            </if>
            <if test="type != null">
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="group != null">
                #{group,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="vip.housir.exam.entity.Section">
        update section
        <set>
            <if test="pid != null">
                pid = #{pid,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="duration != null">
                duration = #{duration,jdbcType=INTEGER},
            </if>
            <if test="totalScore != null">
                total_score = #{totalScore,jdbcType=REAL},
            </if>
            <if test="everyScore != null">
                every_score = #{everyScore,jdbcType=REAL},
            </if>
            <if test="deduct != null">
                deduct = #{deduct,jdbcType=BIT},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=VARCHAR},
            </if>
            <if test="group != null">
                `group` = #{group,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="vip.housir.exam.entity.Section">
        update section
        set pid = #{pid,jdbcType=INTEGER},
        name = #{name,jdbcType=VARCHAR},
        duration = #{duration,jdbcType=INTEGER},
        total_score = #{totalScore,jdbcType=REAL},
        every_score = #{everyScore,jdbcType=REAL},
        deduct = #{deduct,jdbcType=BIT},
        type = #{type,jdbcType=VARCHAR},
        `group` = #{group,jdbcType=INTEGER},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <sql id="filter">
        <if test="type != null and type!=''">
            and type = #{type,jdbcType=VARCHAR}
        </if>
    </sql>
    <sql id="search">
        <if test="name != null and name!=''">
            and name like CONCAT('%',#{name,jdbcType=VARCHAR},'%')
        </if>
    </sql>
    <sql id="order">
        <if test="orderBy != null">
            order by
            <if test="orderBy == 'createTime'">
                create_time
            </if>
            <if test="orderBy == 'avgScore'">
                update_time
            </if>
            <!-- order type -->
            <if test="orderType == 'desc'">
                desc
            </if>
            <if test="orderType == 'asc'">
                asc
            </if>
        </if>
    </sql>
</mapper>