<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="vip.housir.store.mapper.OrderMapper">
    <resultMap id="BaseResultMap" type="vip.housir.store.entity.Order">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="uid" jdbcType="INTEGER" property="uid"/>
        <result column="product_name" jdbcType="VARCHAR" property="productName"/>
        <result column="product_id" jdbcType="INTEGER" property="productId"/>
        <result column="price" jdbcType="INTEGER" property="price"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        id,
        uid,
        product_name,
        product_id,
        price,
        status,
        create_time,
        update_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from `order`
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="listByParam" parameterType="map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from `order`
        <where>
            <include refid="filter"/>
            <include refid="search"/>
        </where>
        <include refid="order"/>
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from `order`
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="vip.housir.store.entity.Order">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into `order` (uid, product_name, product_id,
        price, status, create_time,
        update_time)
        values (#{uid,jdbcType=INTEGER}, #{productName,jdbcType=VARCHAR}, #{productId,jdbcType=INTEGER},
        #{price,jdbcType=INTEGER}, #{status,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
        #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="vip.housir.store.entity.Order">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into `order`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="uid != null">
                uid,
            </if>
            <if test="productName != null">
                product_name,
            </if>
            <if test="productId != null">
                product_id,
            </if>
            <if test="price != null">
                price,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="uid != null">
                #{uid,jdbcType=INTEGER},
            </if>
            <if test="productName != null">
                #{productName,jdbcType=VARCHAR},
            </if>
            <if test="productId != null">
                #{productId,jdbcType=INTEGER},
            </if>
            <if test="price != null">
                #{price,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="vip.housir.store.entity.Order">
        update `order`
        <set>
            <if test="uid != null">
                uid = #{uid,jdbcType=INTEGER},
            </if>
            <if test="productName != null">
                product_name = #{productName,jdbcType=VARCHAR},
            </if>
            <if test="productId != null">
                product_id = #{productId,jdbcType=INTEGER},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="vip.housir.store.entity.Order">
        update `order`
        set uid          = #{uid,jdbcType=INTEGER},
            product_name = #{productName,jdbcType=VARCHAR},
            product_id   = #{productId,jdbcType=INTEGER},
            price        = #{price,jdbcType=INTEGER},
            status       = #{status,jdbcType=VARCHAR},
            create_time  = #{createTime,jdbcType=TIMESTAMP},
            update_time  = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <sql id="filter">
        <if test="uid != null">
            and uid = #{uid,jdbcType=INTEGER}
        </if>
        <if test="productId != null">
            and product_id = #{productId,jdbcType=INTEGER}
        </if>
    </sql>
    <sql id="search">
        <if test="name != null and name!=''">
            and name like CONCAT('%',#{name,jdbcType=VARCHAR},'%')
        </if>
    </sql>
    <sql id="order">
        <if test="orderBy != null">
            order by
            <if test="orderBy == 'createTime'">
                create_time
            </if>
            <if test="orderBy == 'price'">
                price
            </if>
            <!-- order type -->
            <if test="orderType == 'desc'">
                desc
            </if>
            <if test="orderType == 'asc'">
                asc
            </if>
        </if>
    </sql>
</mapper>